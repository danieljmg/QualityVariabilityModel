scope({c0_CodeLines:30, c0_Feature:30});
defaultScope(1);
intRange(-8, 7);
stringLength(16);

c0_Feature = Abstract("c0_Feature");
c0_CodeLines = c0_Feature.addChild("c0_CodeLines").withCard(1, 1);
c0_v0 = Abstract("c0_v0").withGroupCard(1);
c0_Cycle = c0_v0.addChild("c0_Cycle").withCard(0, 1);
c0_Smoother = c0_v0.addChild("c0_Smoother").withCard(0, 1);
c0_v1 = c0_v0.addChild("c0_v1").withCard(0, 1);
c0_v2 = c0_v0.addChild("c0_v2").withCard(0, 1);
c0_v3 = c0_v0.addChild("c0_v3").withCard(0, 1);
c0_v4 = c0_v0.addChild("c0_v4").withCard(0, 1);
c0_v5 = c0_v0.addChild("c0_v5").withCard(0, 1);
c0_v6 = c0_v0.addChild("c0_v6").withCard(0, 1);
c0_v7 = c0_v0.addChild("c0_v7").withCard(0, 1);
c0_v8 = c0_v0.addChild("c0_v8").withCard(0, 1);
c0_v9 = c0_v0.addChild("c0_v9").withCard(0, 1);
c0_v10 = c0_v0.addChild("c0_v10").withCard(0, 1);
c0_v11 = c0_v0.addChild("c0_v11").withCard(0, 1);
c0_v12 = c0_v0.addChild("c0_v12").withCard(0, 1);
c0_v13 = c0_v0.addChild("c0_v13").withCard(0, 1);
c0_v14 = c0_v0.addChild("c0_v14").withCard(0, 1);
c0_v15 = c0_v0.addChild("c0_v15").withCard(0, 1);
c0_v16 = c0_v0.addChild("c0_v16").withCard(0, 1);
c0_v17 = c0_v0.addChild("c0_v17").withCard(0, 1);
c0_v18 = c0_v0.addChild("c0_v18").withCard(0, 1);
c0_v19 = c0_v0.addChild("c0_v19").withCard(0, 1);
c0_v20 = c0_v0.addChild("c0_v20").withCard(0, 1);
c0_v21 = c0_v0.addChild("c0_v21").withCard(0, 1);
c0_v22 = c0_v0.addChild("c0_v22").withCard(0, 1);
c0_Vi = c0_v0.addChild("c0_Vi").withCard(0, 1);
c0_Fi = c0_v0.addChild("c0_Fi").withCard(0, 1);
c0_Jacobi = c0_v0.addChild("c0_Jacobi").withCard(0, 1);
c0_ColorGS = c0_v0.addChild("c0_ColorGS").withCard(0, 1);
c0_Line = c0_v0.addChild("c0_Line").withCard(0, 1);
c0_ZebraLine = c0_v0.addChild("c0_ZebraLine").withCard(0, 1);
c0_total_codelines = Clafer("c0_total_codelines").withCard(1, 1);
c0_total_sizecode = c0_total_codelines.addChild("c0_total_sizecode").withCard(1, 1);
c0_CP = Clafer("c0_CP").withCard(1, 1).withGroupCard(1);
c0_CodeLines.refToUnique(Int);
c0_CodeLines.addConstraint(greaterThanEqual(joinRef($this()), constant(0)));
c0_Cycle.extending(c0_Feature);
c0_Cycle.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(5)));
c0_Smoother.extending(c0_Feature);
c0_Smoother.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(6)));
c0_v1.extending(c0_Feature);
c0_v1.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(3)));
c0_v2.extending(c0_Feature);
c0_v2.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(1)));
c0_v3.extending(c0_Feature);
c0_v3.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(9)));
c0_v4.extending(c0_Feature);
c0_v4.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(7)));
c0_v5.extending(c0_Feature);
c0_v5.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(4)));
c0_v6.extending(c0_Feature);
c0_v6.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(8)));
c0_v7.extending(c0_Feature);
c0_v7.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(9)));
c0_v8.extending(c0_Feature);
c0_v8.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(8)));
c0_v9.extending(c0_Feature);
c0_v9.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(3)));
c0_v10.extending(c0_Feature);
c0_v10.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(5)));
c0_v11.extending(c0_Feature);
c0_v11.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(3)));
c0_v12.extending(c0_Feature);
c0_v12.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(2)));
c0_v13.extending(c0_Feature);
c0_v13.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(4)));
c0_v14.extending(c0_Feature);
c0_v14.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(3)));
c0_v15.extending(c0_Feature);
c0_v15.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(3)));
c0_v16.extending(c0_Feature);
c0_v16.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(1)));
c0_v17.extending(c0_Feature);
c0_v17.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(2)));
c0_v18.extending(c0_Feature);
c0_v18.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(7)));
c0_v19.extending(c0_Feature);
c0_v19.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(4)));
c0_v20.extending(c0_Feature);
c0_v20.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(3)));
c0_v21.extending(c0_Feature);
c0_v21.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(2)));
c0_v22.extending(c0_Feature);
c0_v22.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(7)));
c0_Vi.extending(c0_Feature);
c0_Vi.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(1)));
c0_Fi.extending(c0_Feature);
c0_Fi.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(8)));
c0_Jacobi.extending(c0_Feature);
c0_Jacobi.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(4)));
c0_ColorGS.extending(c0_Feature);
c0_ColorGS.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(2)));
c0_Line.extending(c0_Feature);
c0_Line.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(5)));
c0_ZebraLine.extending(c0_Feature);
c0_ZebraLine.addConstraint(equal(joinRef(join($this(), c0_CodeLines)), constant(4)));
c0_total_codelines.refToUnique(Int);
c0_total_sizecode.refToUnique(Int);
c0_total_codelines.addConstraint(implies(some(join($this(), c0_total_sizecode)), equal(joinRef(join($this(), c0_total_sizecode)), sum(join(global(c0_Feature), c0_CodeLines)))));
Constraint(implies(some(global(c0_total_codelines)), equal(joinRef(global(c0_total_codelines)), sum(join(global(c0_Feature), c0_CodeLines)))));
c0_CP.extending(c0_v0);
Constraint(none(join(global(c0_v0), c0_v5)));
Constraint(none(join(global(c0_v0), c0_v10)));
Constraint(none(join(global(c0_v0), c0_v16)));
Constraint(none(join(global(c0_v0), c0_v22)));
Constraint(or(some(join(global(c0_v0), c0_Cycle)), none(join(global(c0_v0), c0_Vi))));
Constraint(or(some(join(global(c0_v0), c0_Cycle)), none(join(global(c0_v0), c0_Fi))));
Constraint(or(some(join(global(c0_v0), c0_Smoother)), none(join(global(c0_v0), c0_Jacobi))));
Constraint(or(some(join(global(c0_v0), c0_Smoother)), none(join(global(c0_v0), c0_ColorGS))));
Constraint(or(some(join(global(c0_v0), c0_Smoother)), none(join(global(c0_v0), c0_Line))));
Constraint(or(some(join(global(c0_v0), c0_Smoother)), none(join(global(c0_v0), c0_ZebraLine))));
